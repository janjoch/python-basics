#### LINES
lines.linewidth   : 1.5      	  ## line width in points
lines.linestyle   : -       	  ## solid line
lines.marker      : None    	  ## the default marker
lines.markeredgewidth  : 1.0      ## the line width around the marker symbol
lines.markersize  : 6             ## markersize, in points
lines.dash_joinstyle : round      ## miter|round|bevel
lines.dash_capstyle : butt        ## butt|round|projecting
lines.solid_joinstyle : round     ## miter|round|bevel
lines.solid_capstyle : projecting ## butt|round|projecting
lines.antialiased : True          ## render lines in antialiased (no jaggies)


#### PATCHES
## Patches are graphical objects that fill 2D space, like polygons or circles
patch.linewidth        : 1.5     ## edge width in points.
patch.facecolor        : C0
patch.edgecolor        : k       ## if forced, or patch is not filled
patch.force_edgecolor  : False   ## True to always use edgecolor
patch.antialiased      : True    ## render patches in antialiased (no jaggies)


#### AXES
## default face and edge color, default tick sizes,
axes.facecolor      : white    ## axes background color
axes.edgecolor      : gray     ## axes edge color
axes.linewidth      : 0.8      ## edge linewidth
axes.grid           : True     ## display grid or not
axes.grid.axis      : both     ## which axis the grid should apply to
axes.grid.which     : major    ## gridlines at major, minor or both ticks
axes.titlesize      : large    ## fontsize of the axes title
axes.titleweight    : normal   ## font weight of title
axes.titlepad       : 6.0      ## pad between axes and title in points
axes.labelsize      : medium   ## fontsize of the x any y labels
axes.labelpad       : 4.0      ## space between label and axis
axes.labelweight    : normal   ## weight of the x and y labels
axes.labelcolor     : k
axes.axisbelow      : line         ## draw axis gridlines and ticks below patches (True); above patches but below lines ('line'); or above all (False)
axes.formatter.limits: -7, 7       ## use scientific notation if log10 of the axis range is smaller than the first or larger than the second
axes.formatter.use_mathtext: True  ## When True, use mathtext for scientific notation.
axes.formatter.min_exponent: 7     ## minimum exponent to format in scientific notation
axes.formatter.useoffset: False    ## If True, the tick label formatter will default to labeling ticks relativeto an offset when the data range is small compared to the minimum absolute value of the data.
axes.formatter.offset_threshold: 2 ## When useoffset is True, the offset will be used when it can remove at least this number of significant digits from tick labels.
axes.spines.left   : True          ## display axis spines
axes.spines.bottom : True
axes.spines.top    : True
axes.spines.right  : True
axes.unicode_minus : True       ## use unicode for the minus symbol
axes.prop_cycle    : cycler('color', ['348ABD', 'A60628', '7A68A6', '467821', 'D55E00', 'CC79A7', '56B4E9', '009E73', 'F0E442', '0072B2'])## colorspecs: single letter, long name, or web-style hex					  
axes.autolimit_mode : data      ## How to scale axes limits to the data.
axes.xmargin        : .05        ## x margin.  See `axes.Axes.margins`
axes.ymargin        : .05        ## y margin See `axes.Axes.margins`
polaraxes.grid      : True      ## display grid on polar axes
axes3d.grid         : True      ## display grid on 3d axes

#### DATES
## These control the default format strings used in AutoDateFormatter.
date.autoformatter.year     : %Y
date.autoformatter.month    : %Y-%m
date.autoformatter.day      : %Y-%m-%d
date.autoformatter.hour     : %m-%d %H
date.autoformatter.minute   : %d %H:%M
date.autoformatter.second   : %H:%M:%S
date.autoformatter.microsecond   : %M:%S.%f

#### TICKS
## see http://matplotlib.org/api/axis_api.html#matplotlib.axis.Tick
xtick.top            : False  ## draw ticks on the top side
xtick.bottom         : True   ## draw ticks on the bottom side
xtick.labeltop       : False  ## draw label on the top
xtick.labelbottom    : True   ## draw label on the bottom
xtick.major.size     : 3.5    ## major tick size in points
xtick.minor.size     : 1.5    ## minor tick size in points
xtick.major.width    : 0.8    ## major tick width in points
xtick.minor.width    : 0.6    ## minor tick width in points
xtick.major.pad      : 3.5    ## distance to major tick label in points
xtick.minor.pad      : 3.4    ## distance to the minor tick label in points
xtick.color          : k      ## color of the tick labels
xtick.labelsize      : medium ## fontsize of the tick labels
xtick.direction      : out    ## direction: in, out, or inout
xtick.minor.visible  : True  ## visibility of minor ticks on x-axis
xtick.major.top      : True   ## draw x axis top major ticks
xtick.major.bottom   : True   ## draw x axis bottom major ticks
xtick.minor.top      : True   ## draw x axis top minor ticks
xtick.minor.bottom   : True   ## draw x axis bottom minor ticks
xtick.alignment      : center ## alignment of xticks

ytick.left           : True   ## draw ticks on the left side
ytick.right          : False  ## draw ticks on the right side
ytick.labelleft      : True   ## draw tick labels on the left side
ytick.labelright     : False  ## draw tick labels on the right side
ytick.major.size     : 3.5    ## major tick size in points
ytick.minor.size     : 1.5    ## minor tick size in points
ytick.major.width    : 0.8    ## major tick width in points
ytick.minor.width    : 0.6    ## minor tick width in points
ytick.major.pad      : 3.5    ## distance to major tick label in points
ytick.minor.pad      : 3.4    ## distance to the minor tick label in points
ytick.color          : k      ## color of the tick labels
ytick.labelsize      : medium  ## fontsize of the tick labels
ytick.direction      : out    ## direction: in, out, or inout
ytick.minor.visible  : True  ## visibility of minor ticks on y-axis
ytick.major.left     : True   ## draw y axis left major ticks
ytick.major.right    : True   ## draw y axis right major ticks
ytick.minor.left     : True   ## draw y axis left minor ticks
ytick.minor.right    : True   ## draw y axis right minor ticks
ytick.alignment      : center_baseline ## alignment of yticks

#### GRIDS
grid.color       :   b0b0b0    ## grid color
grid.linestyle   :   --        ## 
grid.linewidth   :   0.8       ## in points
grid.alpha       :   0.8       ## transparency, between 0.0 and 1.0

#### Legend
legend.loc           : best
legend.frameon       : True     ## if True, draw the legend on a background patch
legend.framealpha    : 0.8      ## legend patch transparency
legend.facecolor     : inherit  ## inherit from axes.facecolor; or color spec
legend.edgecolor     : 0.8      ## background patch boundary color
legend.fancybox      : True     ## if True, use a rounded box for the legend background
legend.shadow        : False    ## if True, give background a shadow effect
legend.numpoints     : 1        ## the number of marker points in the legend line
legend.scatterpoints : 1        ## number of scatter points
legend.markerscale   : 1.0      ## the relative size of legend markers vs. original
legend.fontsize      : medium
## Dimensions as fraction of fontsize:
legend.borderpad     : 0.4      ## border whitespace
legend.labelspacing  : 0.3      ## the vertical space between the legend entries
legend.handlelength  : 1.5      ## the length of the legend lines
legend.handleheight  : 0.7      ## the height of the legend handle
legend.handletextpad : 0.8      ## the space between the legend line and legend text
legend.borderaxespad : 0.5      ## the border between the axes and legend edge
legend.columnspacing : 2.0      ## column separation

#### FIGURE
## See http://matplotlib.org/api/figure_api.html#matplotlib.figure.Figure
figure.titlesize : large      ## size of the figure title (Figure.suptitle())
figure.titleweight : normal   ## weight of the figure title
figure.figsize   : 9.75, 5      ## figure size in inches
figure.dpi       : 100        ## figure dots per inch
figure.facecolor : w          ## figure facecolor; 0.75 is scalar gray
figure.edgecolor : w          ## figure edgecolor
figure.frameon : True         ## enable figure frame
#figure.max_open_warning : 20  ## The maximum number of figures to open through the pyplot interface before emitting a warning.
 
## The figure subplot parameters.  All dimensions are a fraction of the
figure.subplot.left    : 0.125  ## the left side of the subplots of the figure
figure.subplot.right   : 0.9    ## the right side of the subplots of the figure
figure.subplot.bottom  : 0.11   ## the bottom of the subplots of the figure
figure.subplot.top     : 0.88   ## the top of the subplots of the figure
figure.subplot.wspace  : 0.4    ## the amount of width reserved for space between subplots,
                                ## expressed as a fraction of the average axis width
figure.subplot.hspace  : 0.4    ## the amount of height reserved for space between subplots,
                                ## expressed as a fraction of the average axis height

## Figure layout
figure.autolayout : False             ## When True, automatically adjust subplot parameters to make the plot fit the figure using `tight_layout`
figure.constrained_layout.use: False  ## When True, automatically make plot elements fit on the figure. (Not compatible with `autolayout`, above).	
#figure.constrained_layout.h_pad : 0.04167 ## Padding around axes objects. Float representing 
#figure.constrained_layout.w_pad : 0.04167 ##  inches. Default is 3./72. inches (3 pts)
#figure.constrained_layout.hspace : 0.02   ## Space between subplot groups. Float representing 
#figure.constrained_layout.wspace : 0.02   ##  a fraction of the subplot widths being separated. 

#### IMAGES
#image.aspect : equal             ## equal | auto | a number
#image.interpolation  : nearest   ## see help(imshow) for options
#image.cmap   : viridis           ## A colormap name, gray etc...
#image.lut    : 256               ## the size of the colormap lookup table
#image.origin : upper             ## lower | upper
#image.resample  : True
#image.composite_image : True     ## When True, all the images on a set of axes are
                                  ## combined into a single composite image before
                                  ## saving a figure as a vector graphics file,
                                  ## such as a PDF.

#### CONTOUR PLOTS
#contour.negative_linestyle : dashed ## string or on-off ink sequence
#contour.corner_mask        : True   ## True | False | legacy

#### ERRORBAR PLOTS
#errorbar.capsize : 0             ## length of end cap on error bars in pixels

#### HISTOGRAM PLOTS
hist.bins : auto                   ## The default number of histogram bins.
                                  ## If Numpy 1.11 or later is
                                  ## installed, may also be `auto`

#### SCATTER PLOTS
scatter.marker : o               ## The default marker type for scatter plots.


#### SAVING FIGURES
## the default savefig params can be different from the display params e.g., you may want a higher resolution, or to make the figure background white
#savefig.dpi         : figure   ## figure dots per inch or 'figure'
#savefig.facecolor   : w        ## figure facecolor when saving
#savefig.edgecolor   : w        ## figure edgecolor when saving
#savefig.format      : png      ## png, ps, pdf, svg
#savefig.bbox        : standard ## 'tight' or 'standard'.
                                ## 'tight' is incompatible with pipe-based animation
                                ## backends but will workd with temporary file based ones:
                                ## e.g. setting animation.writer to ffmpeg will not work,
                                ## use ffmpeg_file instead
#savefig.pad_inches  : 0.1      ## Padding to be used when bbox is set to 'tight'
#savefig.jpeg_quality: 95       ## when a jpeg is saved, the default quality parameter.
#savefig.directory   : ~        ## default directory in savefig dialog box,
                                ## leave empty to always use current working directory
#savefig.transparent : False    ## setting that controls whether figures are saved with a
                                ## transparent background by default
#savefig.frameon : True			## enable frame of figure when saving 
#savefig.orientation : portrait	## Orientation of saved figure				

### tk backend params
#tk.window_focus   : False    ## Maintain shell focus for TkAgg

### ps backend params
#ps.papersize      : letter   ## auto, letter, legal, ledger, A0-A10, B0-B10
#ps.useafm         : False    ## use of afm fonts, results in small files
#ps.usedistiller   : False    ## can be: None, ghostscript or xpdf
                                          ## Experimental: may produce smaller files.
                                          ## xpdf intended for production of publication quality files,
                                          ## but requires ghostscript, xpdf and ps2eps
#ps.distiller.res  : 6000      ## dpi
#ps.fonttype       : 3         ## Output Type 3 (Type3) or Type 42 (TrueType)

### pdf backend params
#pdf.compression   : 6   ## integer from 0 to 9
                         ## 0 disables compression (good for debugging)
#pdf.fonttype       : 3         ## Output Type 3 (Type3) or Type 42 (TrueType)
#pdf.use14corefonts : False
#pdf.inheritcolor : False

### svg backend params
#svg.image_inline : True       ## write raster image data directly into the svg file
#svg.fonttype :   path         ## How to handle SVG fonts:
   ##     none: Assume fonts are installed on the machine where the SVG will be viewed.
   ##     path: Embed characters as paths -- supported by most SVG renderers
   ##     svgfont: Embed characters as SVG fonts -- supported only by Chrome,
   ##                Opera and Safari
#svg.hashsalt : None           ## if not None, use this string as hash salt
                               ## instead of uuid4
### pgf parameter
#pgf.rcfonts : True
#pgf.preamble :   
#pgf.texsystem : xelatex
#pgf.debug : False

### docstring params
##docstring.hardcopy = False  ## set this when you want to generate hardcopy docstring

## Event keys to interact with figures/plots via keyboard.
## Customize these settings according to your needs.
## Leave the field(s) empty if you don't need a key-map. (i.e., fullscreen : '')
#keymap.fullscreen : f, ctrl+f       ## toggling
#keymap.home : h, r, home            ## home or reset mnemonic
#keymap.back : left, c, backspace    ## forward / backward keys to enable
#keymap.forward : right, v           ##   left handed quick navigation
#keymap.pan : p                      ## pan mnemonic
#keymap.zoom : o                     ## zoom mnemonic
#keymap.save : s, ctrl+s             ## saving current figure
#keymap.quit : ctrl+w, cmd+w, q      ## close the current figure
#keymap.quit_all : W, cmd+W, Q       ## close all figures
#keymap.grid : g                     ## switching on/off major grids in current axes
#keymap.grid_minor : G               ## switching on/off minor grids in current axes
#keymap.yscale : l                   ## toggle scaling of y-axes ('log'/'linear')
#keymap.xscale : k, L                ## toggle scaling of x-axes ('log'/'linear')
#keymap.all_axes : a                 ## enable all axes

## Control location of examples data files
#examples.directory :              ## directory to look in for custom installation

###ANIMATION settings
#animation.html :  none            ## How to display the animation as HTML in
                                   ## the IPython notebook. 'html5' uses
                                   ## HTML5 video tag; 'jshtml' creates a 
                                   ## Javascript animation
#animation.writer : ffmpeg         ## MovieWriter 'backend' to use
#animation.codec : h264            ## Codec to use for writing movie
#animation.bitrate: -1             ## Controls size/quality tradeoff for movie.
                                   ## -1 implies let utility auto-determine
#animation.frame_format:  png      ## Controls frame format used by temp files
#animation.html_args:              ## Additional arguments to pass to html writer
#animation.ffmpeg_path:  ffmpeg    ## Path to ffmpeg binary. Without full path
                                   ## $PATH is searched
#animation.ffmpeg_args:            ## Additional arguments to pass to ffmpeg
#animation.avconv_path:  avconv    ## Path to avconv binary. Without full path
                                   ## $PATH is searched
#animation.avconv_args:            ## Additional arguments to pass to avconv
#animation.convert_path:  convert  ## Path to ImageMagick's convert binary.
                                   ## On Windows use the full path since convert
                                   ## is also the name of a system tool.
#animation.convert_args:           ## Additional arguments to pass to convert
#animation.embed_limit : 20.0